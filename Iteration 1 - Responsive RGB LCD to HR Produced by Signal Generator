// Libraries to allow the Arduino to interact with the components/peripherals, 
// such as the LCD. 
#include <LiquidCrystal.h>
#include <Wire.h>
 
// Initialize the digital pins that control the LCD backlight. 
#define REDLITE 3
#define GREENLITE 5
#define BLUELITE 6

// Initialize regular LCD pins and allow the LCD library to initalize an LCD
// object with these attributes.  
const int rs = 7, en = 8, d4 = 9, d5 = 10, d6 = 11, d7 = 12;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

// Set the overall brightness of the LCD (can be in range 0 -> 255). 
int brightness = 100;

// Set the digital pin for the signal generator. 
int pwmInput = 13;

// Global Variables (any function in the program can use/change value of them). 
int age = 10; 
int HR; 
bool highHR;


void setup() {
  // Set up the LCD's number of rows and columns: 
  lcd.begin(16, 2);
  
  // The RGB pins output to determine the backlight color.  
  pinMode(REDLITE, OUTPUT);
  pinMode(GREENLITE, OUTPUT);
  pinMode(BLUELITE, OUTPUT);

  // The digital pin of the signal generator inputs the value from it. 
  pinMode(pwmInput, INPUT);

  // Begin serial communications to any external modules (this will be used for dialogue
  // with signal generator).
  Serial.begin(9600);
}
 
void loop() {
  // We will initally set this to false, as at first, there is no irregular HR. 
  // This variable is a boolean, meaning it can be true or false. 
  highHR = false; 

  // Var HR stores the PWM value generated by the signal generator, interpreted/measured by the 
  // Arduino. 
  HR = pulseIn(pwmInput, HIGH);

  //To evaluate the HR (we have a function below with a series of checks). This will let the 
  // program know if there is an irregular HR or not. 
  highHR = evaluateHR(age, HR);

  // Display the HR on the LCD.
  displayHR();

  // If there is an irregular HR, then call for a response (also an additional function below). 
  if (highHR == true) {
    highHRResponse();
  } 
  
  // If HR is normal, then follow these steps. 
  if (highHR == false) {
    // Continue to display any updated HR. 
    displayHR();

    // Set backlight of LCD to green (normal HR). 
    setBacklight(0, 255, 0);
  }

}
 
// Sets the backlight color of the LCD based on ([R]0-255, [G]0-255, [B]0-255). 
// The color changes depending on the strength of each one. 
void setBacklight(uint8_t r, uint8_t g, uint8_t b) {
  // Normalize the red LED - its brighter than the rest!
  r = map(r, 0, 255, 0, 100);
  g = map(g, 0, 255, 0, 150);
 
  r = map(r, 0, 255, 0, brightness);
  g = map(g, 0, 255, 0, brightness);
  b = map(b, 0, 255, 0, brightness);
 
  // common anode so invert!
  r = map(r, 0, 255, 255, 0);
  g = map(g, 0, 255, 255, 0);
  b = map(b, 0, 255, 255, 0);

  // This tells the Arduino to set the LCD backlight color. 
  analogWrite(REDLITE, r);
  analogWrite(GREENLITE, g);
  analogWrite(BLUELITE, b);
}

// Evaluates the current HR, depending on the age (whether it is normal or irregular).
// Sets the boolean var highHR accordingly. 
bool evaluateHR(int age, int HR) {
  if (age < 1) {
    if (HR <= 70 || HR >= 160) {
      highHR = true; 
      return highHR; 
    }
  }
  if (age >= 1 && age <= 2) {
    if (HR <= 80 || HR >= 130) {
      highHR = true; 
      return highHR; 
    }
  }
  if (age >= 3 && age <= 4) {
    if (HR <= 80 || HR >= 120) {
      highHR = true; 
      return highHR; 
    }
  }
  if (age >= 5 && age <= 6) {
    if (HR <= 75 || HR >= 115) {
      highHR = true; 
      return highHR; 
    }
  }
  if (age >= 7 && age <= 9) {
    if (HR <= 70 || HR >= 110) {
      highHR = true; 
      return highHR; 
    }
  }
  if (age >= 10) {
    if (HR <= 60 || HR >= 100) {
      highHR = true; 
      return highHR; 
    }
  }
}

// Displays the HR on the LCD. 
void displayHR() {

  // Set an array of 16 characters, but they need to be filled. 
  char buffer1[16];

  // We will fill them with the following string, %3d is how we can put the 
  // value of HR in the string. 
  sprintf(buffer1, "Heart Rate: %3d", HR);

  // Set the space where the LCD should start writing the string. 
  lcd.setCursor(0, 0);

  // Display the string. 
  lcd.print(buffer1); 
}

void highHRResponse() {
  // We have to copy some of the features that happen even when the 
  // HR is normal to make sure correct information displays and to be 
  // able to adjust the HR. 

  // Change backlight of LCD to red. 
  setBacklight(255, 0, 0);

  //To evaluate the HR. 
  highHR = evaluateHR(age, HR);
}
